package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;

import dao.mappers.IMapResultSetIntoEntity;
import domain.model.Ticket;

public class TicketRepository extends RepositoryBase<Ticket> {

	public TicketRepository(Connection connection, IMapResultSetIntoEntity<Ticket> mapper) {
		super(connection, mapper);
	}

	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE tickets(" + "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(50)," + "date varchar(50)," + "location varchar(50)," + "price int(50),"
				+ "quantity int(50)" + ")";
	}

	@Override
	protected String tableName() {
		return "ticket";
	}

	protected String insertSql() {
		return "INSERT INTO tickets(name, date, location, price, quantity) VALUES (?,?,?,?,?)";
	}

	protected String updateSql() {
		return "UPDATE ticket SET (name, date, location, price, quantity)=(?,?,?,?,?) WHERE id=?";
	}

	@Override
	protected void setUpdate(Ticket ticket) throws SQLException {
		update.setString(1, ticket.getName());
		update.setString(2, ticket.getDate());
		update.setString(3, ticket.getLocation());
		update.setInt(4, ticket.getPrice());
		update.setInt(5, ticket.getQuantity());
	}

	@Override
	protected void setInsert(Ticket ticket) throws SQLException {
		insert.setString(1, ticket.getName());
		insert.setString(2, ticket.getDate());
		update.setString(3, ticket.getLocation());
		update.setInt(4, ticket.getPrice());
		update.setInt(5, ticket.getQuantity());
	}


}